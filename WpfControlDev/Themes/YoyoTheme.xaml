<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WpfControlDev.Yoyo">
    <Style TargetType="{x:Type controls:BuyOrSell}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:BuyOrSell}">
                    <StackPanel Orientation="Horizontal">

                        <RadioButton  Name="rbBuy" Content="买入"   Height="15"  BorderBrush="Red"/>

                        <RadioButton  Name="rbSale"  Content="卖出"   Margin="5,0,0,0"  Height="15" BorderBrush="Green"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="EntrustBs" Value= "{x:Static controls:BuyOrSell.Buy}">
                            <Setter TargetName="rbBuy" Property="IsChecked" Value="True"></Setter>
                        </Trigger>
                        <Trigger Property="EntrustBs" Value="{x:Static controls:BuyOrSell.Sell}">
                            <Setter TargetName="rbSale" Property="IsChecked" Value="True"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:OpenOrClose}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Once"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:OpenOrClose}">
                    <StackPanel Orientation="Horizontal">
                        <RadioButton Name="rbOpen" Content="开仓"  Height="15" />
                        <RadioButton Name="rbClose"  Content="平仓" Margin="5,0,0,0"  Height="15" />
                        <RadioButton Name="rbCloseToday" Content="平今仓" Margin="5,0,0,0"  Height="15"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="EntrustKp" Value="{x:Static controls:OpenOrClose.Open}">
                            <Setter TargetName="rbOpen" Property="IsChecked" Value="True"></Setter>
                        </Trigger>
                        <Trigger Property="EntrustKp" Value="{x:Static controls:OpenOrClose.Close}">
                            <Setter TargetName="rbClose" Property="IsChecked" Value="True"></Setter>
                        </Trigger>
                        <Trigger Property="EntrustKp" Value="{x:Static controls:OpenOrClose.CloseToday}">
                            <Setter TargetName="rbCloseToday" Property="IsChecked" Value="True"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:HedgePanel}">
        <Setter Property="IsTabStop" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:HedgePanel}">
                    <StackPanel>
                        <CheckBox x:Name="rbHedging" Margin="5,0,5,0" Focusable="False" Content="套保"/>
                        <CheckBox x:Name="rbArbitrage" Margin="5,3,5,0" Focusable="False" Content="套利" />

                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="EntrustHedge" Value="{x:Static controls:HedgePanel.Hedge}">
                            <Setter TargetName="rbHedging" Property="IsChecked" Value="True"></Setter>
                        </Trigger>
                        <Trigger Property="EntrustHedge" Value="{x:Static controls:HedgePanel.Arbitrage}">
                            <Setter TargetName="rbArbitrage" Property="IsChecked" Value="True"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:RoundButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource RoundButtonForegroundNomalBrush}" />
        <Setter Property="Background" Value="{DynamicResource RoundButtonBackgroundNomalBrush}" />
        <Setter Property="BackgroundMouseOverBrush" Value="{DynamicResource RoundButtonBackgroundMouseOverBrush}"/>
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:RoundButton}">
                    <Grid Width="{TemplateBinding EllipseDiameter}" Height="{TemplateBinding EllipseDiameter}" Background="Transparent">
                        <Ellipse x:Name="ellipse"
                                 Stroke="{DynamicResource ModernButtonBorder}"
                                 StrokeThickness="{TemplateBinding EllipseStrokeThickness}"
                                 Fill="{TemplateBinding Background}"
                                 VerticalAlignment="Stretch" />
                        <Path x:Name="icon"
                                  Data="{TemplateBinding IconData}" 
                                  Width="{TemplateBinding IconSize}"
                                  Height="{TemplateBinding IconSize}"
                                  Fill="{TemplateBinding Foreground}"                                   
                                  Stretch="Uniform" HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource Accent}" />
                            <Setter TargetName="ellipse" Property="Ellipse.Fill" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BackgroundMouseOverBrush}"/>
                            <!--<Setter TargetName="icon" Property="Width" Value="{TemplateBinding EllipseDiameter}" />-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextPressed}" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource ModernButtonBorderPressed}" />
                            <Setter TargetName="ellipse" Property="Fill" Value="{DynamicResource Accent}" />
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource ModernButtonIconForegroundPressed}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ModernButtonTextHover}" />
                            <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource ModernButtonTextHover}" />
                            <Setter TargetName="icon" Property="Fill" Value="{DynamicResource ModernButtonBorder}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource Accent}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  UcUserMain  -->
    <SolidColorBrush x:Key="UcUserMain_Background" Color="#FF192D45" />
    <SolidColorBrush x:Key="UcUserMain_TableTabItemBackground" Color="#FF416285" />
    <SolidColorBrush x:Key="UcUserMain_TableTabItemForeground" Color="#FF8CA4B6" />
    <SolidColorBrush x:Key="UcUserMain_TableTabItemMouseOverBackground" Color="#33567A" />
    <SolidColorBrush x:Key="UcUserMain_TableTabItemMouseOverForeground" Color="#7CB8E6" />
    <SolidColorBrush x:Key="UcUserMain_TableTabItemSelectedBackground" Color="#FF28486B" />
    <SolidColorBrush x:Key="UcUserMain_TableTabItemSelectedForeground" Color="#FF50BAF6" />
    <SolidColorBrush x:Key="UcUserMain_TableTabItemBorderBrush" Color="#192D45" />
    <SolidColorBrush x:Key="UcUserMain_TableTabBarBorderBrush" Color="#192D45" />
    <SolidColorBrush x:Key="UcUserMain_TableTabBarBackground" Color="#FF416285" />
    <Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{StaticResource UcUserMain_TableTabItemForeground}" />
        <Setter Property="RenderOptions.EdgeMode" Value="Aliased" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{StaticResource UcUserMain_TableTabItemBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource UcUserMain_TableTabItemBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Border
                                x:Name="BG"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0,0,1,0">
                            <TextBlock
                                    x:Name="text"
                                    Margin="5,0,5,0"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Foreground="{TemplateBinding Foreground}"
                                    Text="{TemplateBinding Content}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource UcUserMain_TableTabItemSelectedBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource UcUserMain_TableTabItemSelectedForeground}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{StaticResource UcUserMain_TableTabItemSelectedBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource UcUserMain_TableTabItemSelectedForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>